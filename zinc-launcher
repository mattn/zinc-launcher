#!/usr/bin/python

import gtk
import os
import subprocess
import threading

class zinc_thread(threading.Thread):
  def __init__(self, id):
    threading.Thread.__init__(self)
    self.id = id

  def run(self):
    os.system("padsp ./zinc " + self.id)

gtk.gdk.threads_init()

win = gtk.Window()
win.set_title("ZiNc Launcher")
win.set_default_size(400, 500)
win.connect('destroy', gtk.main_quit)

swin = gtk.ScrolledWindow()
swin.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_ALWAYS)

tree_model = gtk.ListStore(str, str)
tree_view = gtk.TreeView(tree_model)
renderer = gtk.CellRendererText()
tree_view.append_column(gtk.TreeViewColumn("ID", renderer, text=0))
tree_view.append_column(gtk.TreeViewColumn("Title", renderer, text=1))

def on_activated(tree_view, path, column):
  model = tree_view.get_model()
  iter = model.get_iter(path)
  id = model.get_value(iter, 0)
  t = zinc_thread(id)
  t.start()
  tree_view.set_sensitive(False)
  while t.isAlive():
    gtk.main_iteration(False)
  tree_view.set_sensitive(True)
  
tree_view.connect('row-activated', on_activated)

os.putenv("LD_LIBRARY_PATH", ".")
p = subprocess.Popen("./zinc --list-games", shell=True, stdin=subprocess.PIPE,
        stdout=subprocess.PIPE, stderr=subprocess.STDOUT,
        close_fds=True)
(stdouterr, stdin) = (p.stdout, p.stdin)
stdouterr.readline()
while True:
  line = stdouterr.readline().strip()
  if not line:
    break
  iter = tree_model.append()
  item = line.split(" ", 1)
  tree_model.set_value(iter, 0, item[0])
  tree_model.set_value(iter, 1, item[1])

swin.add(tree_view)
win.add(swin)

win.show_all()

gtk.main()
